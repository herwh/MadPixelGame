//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Settings/InputBindings.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputBindings : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputBindings()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputBindings"",
    ""maps"": [
        {
            ""name"": ""Joystick"",
            ""id"": ""08b1ec8c-a6ac-4bd0-bd44-a2e3231d7944"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""9aa7e1ba-ec76-478d-afcc-2981cda57de1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchPress"",
                    ""type"": ""Button"",
                    ""id"": ""13cfb4a9-7cb0-4ced-a400-5c2d40e92e96"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""f26ba2bf-a2f5-41ef-b5dd-2a6d2c9281cf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e7f0007e-52ad-42fa-beb0-0716c84125f1"",
                    ""path"": ""<AndroidJoystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0c23c14b-7ebb-445f-81b0-962d1789364f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a0ab71ff-d95e-4a68-9438-ab89ef6c367b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0139ac60-30c2-4f6e-aa00-cca03231084f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3cd05b1d-9f06-49d2-a82f-608d8491bd0d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f8864393-f05b-4582-bc50-2af3e3ed62c5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""dff12a7f-7e13-4b07-9038-de6f3b50ec38"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ae02861-b679-4c43-b6e4-d89548cfb0ed"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""948464ed-79c8-4f93-bd13-9c3f34e7658e"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5dea7b2a-ca07-4248-8cc6-da16d7cf49b9"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Joystick
        m_Joystick = asset.FindActionMap("Joystick", throwIfNotFound: true);
        m_Joystick_Move = m_Joystick.FindAction("Move", throwIfNotFound: true);
        m_Joystick_TouchPress = m_Joystick.FindAction("TouchPress", throwIfNotFound: true);
        m_Joystick_TouchPosition = m_Joystick.FindAction("TouchPosition", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Joystick
    private readonly InputActionMap m_Joystick;
    private IJoystickActions m_JoystickActionsCallbackInterface;
    private readonly InputAction m_Joystick_Move;
    private readonly InputAction m_Joystick_TouchPress;
    private readonly InputAction m_Joystick_TouchPosition;
    public struct JoystickActions
    {
        private @InputBindings m_Wrapper;
        public JoystickActions(@InputBindings wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Joystick_Move;
        public InputAction @TouchPress => m_Wrapper.m_Joystick_TouchPress;
        public InputAction @TouchPosition => m_Wrapper.m_Joystick_TouchPosition;
        public InputActionMap Get() { return m_Wrapper.m_Joystick; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JoystickActions set) { return set.Get(); }
        public void SetCallbacks(IJoystickActions instance)
        {
            if (m_Wrapper.m_JoystickActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_JoystickActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_JoystickActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_JoystickActionsCallbackInterface.OnMove;
                @TouchPress.started -= m_Wrapper.m_JoystickActionsCallbackInterface.OnTouchPress;
                @TouchPress.performed -= m_Wrapper.m_JoystickActionsCallbackInterface.OnTouchPress;
                @TouchPress.canceled -= m_Wrapper.m_JoystickActionsCallbackInterface.OnTouchPress;
                @TouchPosition.started -= m_Wrapper.m_JoystickActionsCallbackInterface.OnTouchPosition;
                @TouchPosition.performed -= m_Wrapper.m_JoystickActionsCallbackInterface.OnTouchPosition;
                @TouchPosition.canceled -= m_Wrapper.m_JoystickActionsCallbackInterface.OnTouchPosition;
            }
            m_Wrapper.m_JoystickActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @TouchPress.started += instance.OnTouchPress;
                @TouchPress.performed += instance.OnTouchPress;
                @TouchPress.canceled += instance.OnTouchPress;
                @TouchPosition.started += instance.OnTouchPosition;
                @TouchPosition.performed += instance.OnTouchPosition;
                @TouchPosition.canceled += instance.OnTouchPosition;
            }
        }
    }
    public JoystickActions @Joystick => new JoystickActions(this);
    public interface IJoystickActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnTouchPress(InputAction.CallbackContext context);
        void OnTouchPosition(InputAction.CallbackContext context);
    }
}
